## Что входит в практическую работу
#1. Космическая еда.
#2. Долги.
#3. Микроволновка.
#4. Функция.
#5. Стипендия.

## **Задача 1. Космическая еда**

#Ваш космический корабль потерпел крушение на пустынной планете. Еды здесь нет, но вы спасли из обломков 100-килограммовый мешок гречки. Из прошлого опыта вы знаете, что если будете экономно питаться, то у вас будет уходить по четыре килограмма гречки в месяц.

### **Что нужно сделать**
#Чтобы прикинуть гречневый бюджет, вы решили написать программу, которая выведет информацию о том, сколько килограммов гречки у вас должно быть в запасе через месяц, два и так далее, пока она не закончится. Используйте цикл `for`.

#**Пример**
# Информация о запасах гречки:
# Через 1 месяц: 96 кг гречки в запасе
# Через 2 месяц: 92 кг гречки в запасе
# Через 3 месяц: 88 кг гречки в запасе
# …
# …
# …
# Через 25 месяц: 0 кг гречки в запасе
# Запасы гречки закончились.
# ```

#### **Что оценивается**
# - Результат вывода соответствует условию.
# - Для решения использован цикл `for` и `range` c шагом.
# """

# Здесь напишите код для решения задачи 1
n = int(input('Гречки в запасе кг: '))
month = 0
for i in range(n - 4, -1, -4):
    month += 1
    print('Через', month, 'месяцев: ', i, 'кг гречки в запасе')
print('Запасы гречки закончились.')

#"""## **Задача 2. Долги**

#В базе данных «МирПрогБанка» есть список должников. Операторам банка дали задание позвонить каждому пятому человеку из списка (нумерация начинается с нуля) и уточнить, какую сумму каждый из них задолжал банку.

### **Что нужно сделать**
#Напишите программу, которая получает данные о количестве должников, а затем спрашивает у каждого пятого (начиная с нуля) его долг. В конце выводится общая сумма долгов.

#**Пример 1**
# ```
# Введите количество должников: 13
# Должник с номером 0
# Сколько должны? 1000
# Должник с номером 5
# Сколько должны? 5000
# Должник с номером 10
# Сколько должны? 2000

#Общая сумма долга: 8000
# ```

#**Пример 2**
#```
#Введите количество должников: 10
#Должник с номером 0
#Сколько должны? 1000
#Должник с номером 5
#Сколько должны? 5000

#Общая сумма долга: 6000
# ```
#### **Что оценивается**
#- Результат вывода соответствует условию.
#- В выводе присутствует общая сумма долга.
#- Формат вывода соответствует примеру (не выведены числа без описания).
#- Для решения использован цикл `for` и `range` c шагом.

#"""

# Здесь напишите код для решения задачи 2
deptors = int(input('Введите количество должников: '))
summ = 0
for n in range(0,deptors,5):
  print('Должник с номером: ', n)
  summ_n = int(input('Сколько должны? '))
  summ += summ_n
print('Общая сумма долга: ',summ)

#"""## **Задача 3. Микроволновка**

#Мы разрабатываем микропрограмму — таймер обратного отсчёта для микроволновых печей. Некоторым пользователям не нравится пищащий звук. Есть задача убрать звук по готовности и заменить его сообщением на LED-экране. В нашем случае будем выводить в консоль сообщение с обратным отсчётом в секундах от `reverse_timer` до момента готовности, то есть 0 секунд, и спрашивать пользователя, готов ли он забрать еду.

#Пользователь в любой момент может прервать режим разогрева, введя `«1»`, то есть ответив `«Да, еда готова»`. Тогда программа выведет на экран сообщение `«Ваша еда готова, можете забрать»` и покажет, на какой секунде был прерван таймер.
#Если пользователь ответит `«0»`, что равноценно `«Нет»`, то таймер уменьшится. Когда он достигнет `0` секунд, выводим сообщение `«Ваша еда готова. Осторожно, горячo!»`.

### **Что нужно сделать**
#Напишите программу, которая выполняет обратный отсчёт таймера для микроволновой печи, учитывая описанные условия.

#**Пример 1**
# ```
# Введите время для обратного отсчёта (в секундах): 5
# Таймер установлен на 5 секунд.
# Осталось: 5 секунд
# Введите 1, если еда готова, или 0, чтобы продолжить: 0
# Осталось: 4 секунд
# Введите 1, если еда готова, или 0, чтобы продолжить: 0
# Осталось: 3 секунд
# Введите 1, если еда готова, или 0, чтобы продолжить: 1
# Ваша еда готова, можете забрать! Таймер был прерван на 3 секундах.
# ```

#**Пример 2**
# ```
# Введите время для обратного отсчёта (в секундах): 3
# Таймер установлен на 3 секунд.
# Осталось: 3 секунд
# Введите 1, если еда готова, или 0, чтобы продолжить: 0
# Осталось: 2 секунд
# Введите 1, если еда готова, или 0, чтобы продолжить: 0
# Осталось: 1 секунд
# Введите 1, если еда готова, или 0, чтобы продолжить: 0
# Ваша еда готова. Осторожно, горячo!
# ```

#### **Что оценивается**
# - Результат вывода соответствует условию.
# - Вывод содержит обратный отсчёт до самого конца или до того момента, когда пользователь решит остановить разогрев.
# - Задача решена с помощью цикла `for`, возможно, с `range` и отрицательным шагом.
# - Последней секундой считается 1.
# """

# Здесь напишите код для решения задачи
total_seconds = int(input('Введите время для обратного отсчёта (в секундах): '))
print('Таймер установлен на ',total_seconds, 'секунд')
for second in range(total_seconds, -1, -1):
  print('Осталось ', second)
  n = int(input('Введите 1, если еда готова, или 0, чтобы продолжить: '))
  if n != 1:
    continue
  else:
    print('Ваша еда готова, можете забрать! Таймер был прерван на ', second, 'секундах')
    break
  if n != 0:
    print('Ваша еда готова. Осторожно, горячo!')

#"""### **Задача 4. Функция**

#Перед изучением функций из программирования Саша решил освежить знания о функциях математики. Помогите Саше написать программу, которая будет считать значение функции в каждой точке отрезка с нужным шагом, начиная с конца.

### **Что нужно сделать**
#Напишите программу, которая получает на вход начало и конец отрезка, а также шаг (отрицательный), а затем высчитывает функцию y в каждой точке отрезка и выводит ответ на экран с нужным шагом, начиная с конца.

#**Обратите внимание,** что пользователь может ввести некорректные значения для диапазона или шага. Вам необходимо исправить эти значения таким образом, чтобы вывод результата не зависел от ошибочно введённых данных.

#Сама функция выглядит так: `y = 𝑥³ + 2 ∙ 𝑥² - 4 ∙ x + 1 `

#**‌Пример 1**
# ```
# Введите начало отрезка: −2
# Введите конец отрезка: 2
# Введите шаг: −1
# В точке 2 функция равна 9
# В точке 1 функция равна 0
# В точке 0 функция равна 1
#В точке −1 функция равна 6
#В точке −2 функция равна 9
# ```

#**‌Пример 2 (пользователь ввёл некорректный шаг)**
# ```
#Введите начало отрезка: 2
#Введите конец отрезка: −2
#Введите шаг: 1
# В точке 2 функция равна 9
# В точке 1 функция равна 0
# В точке 0 функция равна 1
# В точке −1 функция равна 6
# В точке −2 функция равна 9
# ```

#### **Что оценивается**
#- Результат вывода соответствует условию.
#- Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).
#- В программе происходит проверка границ перед созданием range и, возможно, их разворот, как и изменение знака шага.
#- Формат вывода соответствует примеру.
# ""

# Здесь напишите код для решения задачи 4
x = int(input('Введите начало отрезка: '))
y = int(input('Введите конец отрезка: '))
step = int(input('Введите шаг: '))
if x > y:
  x, y = y, x
if step > 0:
  step = -step
for i in range(y, x - 1, step):
  y = i ** 3 + i ** 2 * 2 - 4 * i + 1
  print('В точке', i, 'функция равна', y)

#"""## **Задача 5. Стипендия**

#Ежемесячная стипендия студента составляет `educational_grant` рублей, а расходы на проживание превышают стипендию и составляют `expenses` рублей в месяц.

#Рост цен ежемесячно увеличивает расходы на `3`%, кроме первого месяца. Обратите внимание, что каждый месяц цены увеличиваются на `3%` относительно прошлого месяца.

### **Что нужно сделать**
#Составьте программу расчёта суммы денег, которую необходимо получить у родителей один раз в начале обучения, чтобы можно было прожить учебный год (десять месяцев), используя только эти деньги и стипендию.

#**Обратите внимание:** во всех расчётах программы используются только целые числа, а дробные значения преобразуются в целые.

#**Пример**
# ```
# Введите ежемесячную стипендию: 10000
# Введите ежемесячные расходы: 12000
#1-й месяц: траты 12000 рублей, не хватает 2000 рублей.
#2-й месяц: траты 12360 рублей, не хватает 2360 рублей.
#3-й месяц: траты 12730 рублей, не хватает 2730 рублей.
#4-й месяц: траты 13111 рублей, не хватает 3111 рублей.
#5-й месяц: траты 13504 рублей, не хватает 3504 рублей.
#6-й месяц: траты 13909 рублей, не хватает 3909 рублей.
#7-й месяц: траты 14326 рублей, не хватает 4326 рублей.
#8-й месяц: траты 14755 рублей, не хватает 4755 рублей.
#9-й месяц: траты 15197 рублей, не хватает 5197 рублей.
#10-й месяц: траты 15652 рублей, не хватает 5652 рублей.
#Сумма денег, которую необходимо получить у родителей: 37544 рублей.
# ```

#### **Что оценивается**
# - Результат вывода соответствует условию.
# - Вывод содержит описание результата (выведенные числа сопровождаются текстовым описанием).

#"""

# Здесь напишите код для решения задачи 5
educational_grant = int(input("Введите размер степендии: "))
expenses = int(input("Введите расходы на проживание: "))
total_expenses = expenses - educational_grant
summ = 0
for month in range(1, 11):
    total_expenses = expenses - educational_grant
    month_expenses = total_expenses * 0.01 // 100
    summ = summ + total_expenses
    print(month, '-й месяц: траты', int(expenses), 'рублей, не хватает', int(total_expenses) + int(month_expenses), 'рублей.')
    expenses = expenses * 1.03
print('Нужно попросить у родителей', int(summ), 'рублей')